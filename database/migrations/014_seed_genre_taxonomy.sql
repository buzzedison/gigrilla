-- 014_seed_genre_taxonomy.sql
-- Seeds canonical genre hierarchy based on data/genres.ts

begin;
insert into public.genre_families (id, name) values ('industrial-gothic', 'Industrial / Gothic') on conflict (id) do update set name = excluded.name;
insert into public.genre_types (id, family_id, name) values ('industrial-gothic', 'industrial-gothic', 'Industrial / Gothic') on conflict (id) do update set name = excluded.name, family_id = excluded.family_id;
insert into public.genre_subtypes (id, type_id, name) values ('avant-garde-industrial', 'industrial-gothic', 'Avant-Garde Industrial') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('dark-ambient-industrial', 'industrial-gothic', 'Dark Ambient / Dark Industrial (Hybrid: Industrial / Gothic + Downtempo / Ambient)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('darkwave-coldwave', 'industrial-gothic', 'Darkwave / Coldwave') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('electro-industrial', 'industrial-gothic', 'Electro Industrial / Aggrepo') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('electronic-body-music', 'industrial-gothic', 'Electronic Body Music (EBM)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('futurepop', 'industrial-gothic', 'Futurepop') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('gothic', 'industrial-gothic', 'Gothic') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('gothic-rock-death-rock', 'industrial-gothic', 'Gothic Rock / Death Rock') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('industrial', 'industrial-gothic', 'Industrial') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('industrial-rock-metal', 'industrial-gothic', 'Industrial Rock / Metal') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('krautrock', 'industrial-gothic', 'Krautrock') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('minimal-wave-synth-revival', 'industrial-gothic', 'Minimal Wave / Synth / Industrial Revival (Hybrid: Industrial / Gothic + Downtempo / Ambient)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('noise-music', 'industrial-gothic', 'Noise Music') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('stoner-sludge-metal', 'industrial-gothic', 'Stoner / Sludge Metal') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('symphonic-gothic-metal', 'industrial-gothic', 'Symphonic / Gothic Metal') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('thrash-metal', 'industrial-gothic', 'Thrash Metal') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_types (id, family_id, name) values ('metal-punk', 'industrial-gothic', 'Metal / Punk') on conflict (id) do update set name = excluded.name, family_id = excluded.family_id;
insert into public.genre_subtypes (id, type_id, name) values ('heavy-metal', 'metal-punk', 'Heavy Metal') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('hardcore-punk', 'metal-punk', 'Hardcore Punk') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('punk-new-wave', 'metal-punk', 'Punk / New Wave') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('rock-n-roll-skiffle', 'metal-punk', 'Rock ''n'' Roll / Skiffle Revival') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('glam-shock-rock', 'metal-punk', 'Glam / Glitter / Shock Rock') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('garage-metal', 'metal-punk', 'Garage Metal (NWOBHM)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('post-hardcore-emo', 'metal-punk', 'Post-Hardcore Emo / Screamo') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('metal-punk-hybrids', 'metal-punk', 'Metal / Punk Hybrids (Crossover Thrash, Math Rock / Mathcore, Grindcore, Synthcore / Crunkcore)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('extreme-metal', 'metal-punk', 'Extreme Metal') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_families (id, name) values ('pop-rock', 'Pop & Rock Music') on conflict (id) do update set name = excluded.name;
insert into public.genre_types (id, family_id, name) values ('rock', 'pop-rock', 'Rock') on conflict (id) do update set name = excluded.name, family_id = excluded.family_id;
insert into public.genre_subtypes (id, type_id, name) values ('american-english-folk-revival', 'rock', 'American & English Folk Revival') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('classic-rock', 'rock', 'Classic Rock') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('alternative-rock-indie-2nd-wave', 'rock', 'Alternative Rock / Indie 2nd Wave') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('dance-punk-nu-rave', 'rock', 'Dance-Punk / Nu Rave') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('garage-rock', 'rock', 'Garage Rock') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('folk-rock', 'rock', 'Folk Rock') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('britpop', 'rock', 'Britpop (Hybrid: Alternative / Indie + Pop)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('emo-rock', 'rock', 'Emo Rock') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('alt-indie-pop-hybrids', 'rock', 'Alternative Rock / Indie Hybrids (Dance-Punk, Post-Britpop, etc.)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('new-wave-no-wave', 'rock', 'New Wave / No Wave') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('rockabilly-surf', 'rock', 'Rockabilly / Rock ’n’ Roll / Surf Rock') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('glam-shock-rock', 'rock', 'Glam / Glitter / Shock Rock') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('grunge', 'rock', 'Grunge') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('post-rock-post-prog', 'rock', 'Post-Rock / New Prog / Post-Prog Rock') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('shoegaze-dream-pop-hybrid', 'rock', 'Shoegaze / Dream Pop (Hybrid: Alternative / Indie + Pop)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('noise-rock', 'rock', 'Noise Rock / Math Rock') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('post-punk-revival', 'rock', 'Post-Punk Revival / Garage Rock Revival / Nu Rawk') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('psychedelia', 'rock', 'Psychedelia / Psychedelic / Acid Rock') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('electroclash-indietronica', 'rock', 'Electroclash / Indietronica / Chillwave') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('shoegaze-dream-pop', 'rock', 'Shoegaze / Dream Pop') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('post-britpop', 'rock', 'Post-Britpop (Hybrid: Pop + Contemporary Rock)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('shoegaze-pop', 'rock', 'Shoegaze / Dream Pop (Hybrid: Pop + Alternative / Indie)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('singer-songwriter', 'rock', 'Singer-Songwriter') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('soft-rock', 'rock', 'Soft Rock / Adult Contemporary') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('synthpop-new-romantics', 'rock', 'Synthpop / New Romantics (Hybrid: Pop + Punk / New Wave)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_types (id, family_id, name) values ('pop', 'pop-rock', 'Pop') on conflict (id) do update set name = excluded.name, family_id = excluded.family_id;
insert into public.genre_subtypes (id, type_id, name) values ('brill-building-pop', 'pop', 'Brill Building Pop / Crooners') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('bubblegum-pop', 'pop', 'Bubblegum / Teenybop') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('c-pop', 'pop', 'C-Pop') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('country-pop-country-rock', 'pop', 'Country Pop / Country Rock') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('dance-pop', 'pop', 'Dance Pop') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('disco-post-disco', 'pop', 'Disco / Post-Disco') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('electropop', 'pop', 'Electropop') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('britpop-hybrid', 'pop', 'Britpop (Hybrid: Pop + Alternative / Indie)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('dance-punk-pop', 'pop', 'Dance-Punk / Nu Rave (Hybrid: Pop + Alternative / Indie)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('pop-rock-crossover', 'pop', 'Pop Rock / Power Pop / Soft Rock') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('post-britpop-pop', 'pop', 'Post-Britpop (Hybrid: Pop + Contemporary Rock)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('shoegaze-pop-hybrid', 'pop', 'Shoegaze / Dream Pop (Hybrid: Pop + Alternative / Indie)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('synthpop-new-romantics-pop', 'pop', 'Synthpop / New Romantics (Hybrid: Pop + Punk / New Wave)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('j-pop', 'pop', 'J-Pop') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('k-pop', 'pop', 'K-Pop') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('latin-pop', 'pop', 'Latin Pop') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_families (id, name) values ('rhythm-music', 'Rhythm Music') on conflict (id) do update set name = excluded.name;
insert into public.genre_types (id, family_id, name) values ('country', 'rhythm-music', 'Country') on conflict (id) do update set name = excluded.name, family_id = excluded.family_id;
insert into public.genre_subtypes (id, type_id, name) values ('americana-alt-country', 'country', 'Americana / Alternative Country') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('bakersfield', 'country', 'Bakersfield') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('bluegrass', 'country', 'Bluegrass') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('classic-country', 'country', 'Classic Country / Hillbilly') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('country-pop-country-rock', 'country', 'Country Pop / Country Rock (Hybrid: Pop + Country)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('honky-tonk', 'country', 'Honky Tonk / Hardcore Country') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('neotraditional-country', 'country', 'Neotraditional / Contemporary Country') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('outlaw-country', 'country', 'Progressive / Outlaw Country') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('urban-country', 'country', 'Urban Country') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('western-swing', 'country', 'Western Swing') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_types (id, family_id, name) values ('rhythm-n-blues', 'rhythm-music', 'Rhythm ''n'' Blues') on conflict (id) do update set name = excluded.name, family_id = excluded.family_id;
insert into public.genre_subtypes (id, type_id, name) values ('boogie-electrofunk', 'rhythm-n-blues', 'Boogie / Electrofunk') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('deep-nu-funk', 'rhythm-n-blues', 'Deep / Nu Funk / Rare Groove') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('disco', 'rhythm-n-blues', 'Disco') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('doo-wop', 'rhythm-n-blues', 'Doo Wop') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('early-funk-p-funk', 'rhythm-n-blues', 'Early Funk / P-Funk') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('early-rhythm-n-blues', 'rhythm-n-blues', 'Early Rhythm ''n'' Blues') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('go-go-bounce-beat', 'rhythm-n-blues', 'Go-Go / Bounce Beat') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('modern-soul', 'rhythm-n-blues', 'Modern Soul / Neo Soul / Nu Soul') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('motown-detroit-chicago-soul', 'rhythm-n-blues', 'Motown / Detroit / Chicago Soul') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('urban-rnb', 'rhythm-n-blues', 'Urban Soul / Urban Pop / Urban R&B') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_types (id, family_id, name) values ('soul', 'rhythm-music', 'Soul') on conflict (id) do update set name = excluded.name, family_id = excluded.family_id;
insert into public.genre_subtypes (id, type_id, name) values ('modern-gospel', 'soul', 'Modern Gospel') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('ragtime-stride', 'soul', 'Ragtime / Stride') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('spirituals-worksongs', 'soul', 'Spirituals / Worksongs') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('urban-rnb-soul', 'soul', 'Urban Soul / Urban Pop / Urban R&B') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_families (id, name) values ('blues-jazz', 'The Blues & Jazz') on conflict (id) do update set name = excluded.name;
insert into public.genre_types (id, family_id, name) values ('blues', 'blues-jazz', 'Blues') on conflict (id) do update set name = excluded.name, family_id = excluded.family_id;
insert into public.genre_subtypes (id, type_id, name) values ('blues-rock', 'blues', 'Blues Rock / British Blues') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('boogie-woogie-piano-blues', 'blues', 'Boogie Woogie / Piano Blues') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('chicago-city-urban-blues', 'blues', 'Chicago City / Urban Blues') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('country-folk-delta-blues', 'blues', 'Country / Folk / Delta Blues') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('electric-texas-blues', 'blues', 'Electric Texas Blues') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('hill-country-trance-blues', 'blues', 'Hill Country / Trance Blues') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('jump-blues', 'blues', 'Jump Blues') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('louisiana-swamp-blues', 'blues', 'Louisiana / Swamp Blues') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('soul-blues', 'blues', 'Soul Blues / Nu Southern Soul') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('texas-blues-rock', 'blues', 'Texas Blues Rock / Modern Electric Blues') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_types (id, family_id, name) values ('jazz', 'blues-jazz', 'Jazz') on conflict (id) do update set name = excluded.name, family_id = excluded.family_id;
insert into public.genre_subtypes (id, type_id, name) values ('acid-jazz', 'jazz', 'Acid Jazz / Jazzdance') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('avant-garde-free-jazz', 'jazz', 'Avant-Garde / Free Jazz') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('bebop', 'jazz', 'Bebop') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('chicago-jazz', 'jazz', 'Chicago Jazz') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('fusion-jazz-rock', 'jazz', 'Fusion / Jazz Rock') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('latin-jazz', 'jazz', 'Latin Jazz') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('modern-jazz', 'jazz', 'Progressive / 3rd Stream / Modal Jazz') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('smooth-jazz', 'jazz', 'Smooth Jazz') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('soul-jazz', 'jazz', 'Soul Jazz / Jazz Funk') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('swing-big-band', 'jazz', 'Swing / Big Band') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('west-coast-cool-jazz', 'jazz', 'West Coast / Cool Jazz') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_families (id, name) values ('jamaican', 'Jamaican') on conflict (id) do update set name = excluded.name;
insert into public.genre_types (id, family_id, name) values ('jamaican-core', 'jamaican', 'Jamaican Music') on conflict (id) do update set name = excluded.name, family_id = excluded.family_id;
insert into public.genre_subtypes (id, type_id, name) values ('dancehall', 'jamaican-core', 'Dancehall') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('dub', 'jamaican-core', 'Dub') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('lovers-rock', 'jamaican-core', 'Lovers Rock / UK Reggae') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('reggaeton-latin-rap', 'jamaican-core', 'Reggaetón & Latin Rap (Hybrid: Jamaican + Rap / Hip-Hop)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('roots-reggae', 'jamaican-core', 'Roots Reggae') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('ska', 'jamaican-core', 'Ska') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('ska-revival', 'jamaican-core', 'Ska Revival / Ska Punk / Skacore') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_families (id, name) values ('rap-hip-hop', 'Rap / Hip-Hop') on conflict (id) do update set name = excluded.name;
insert into public.genre_types (id, family_id, name) values ('rap-hip-hop-core', 'rap-hip-hop', 'Rap / Hip-Hop') on conflict (id) do update set name = excluded.name, family_id = excluded.family_id;
insert into public.genre_subtypes (id, type_id, name) values ('dirty-south', 'rap-hip-hop-core', 'Dirty South Rap / Crunk / Snap') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('east-coast-gangsta', 'rap-hip-hop-core', 'East Coast Gangsta Rap') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('electro-hip-hop', 'rap-hip-hop-core', 'Electro (Hybrid: Rap / Hip-Hop + Breakbeat)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('golden-age-rap', 'rap-hip-hop-core', 'Golden Age / Hardcore Rap') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('hip-hop', 'rap-hip-hop-core', 'Hip-Hop') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('jazz-rap', 'rap-hip-hop-core', 'Jazz Rap / Native Tongue') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('miami-bass-bounce', 'rap-hip-hop-core', 'Miami Bass & Bounce') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('old-skool-rap', 'rap-hip-hop-core', 'Old Skool Rap') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('progressive-rap', 'rap-hip-hop-core', 'Progressive / Nu Skool Rap') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('rap-rock-funk-metal', 'rap-hip-hop-core', 'Rap Rock / Funk Metal') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('trap', 'rap-hip-hop-core', 'Trap') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('trapstep-edm-trap', 'rap-hip-hop-core', 'Trapstep / EDM Trap') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_families (id, name) values ('dance-edm', 'Dance & EDM') on conflict (id) do update set name = excluded.name;
insert into public.genre_types (id, family_id, name) values ('breakbeat', 'dance-edm', 'Breakbeat Dance Music') on conflict (id) do update set name = excluded.name, family_id = excluded.family_id;
insert into public.genre_subtypes (id, type_id, name) values ('baseline-uk-funky', 'breakbeat', 'Baseline / UK Funky') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('broken-beats', 'breakbeat', 'Broken Beats') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('chemical-breaks-big-beat', 'breakbeat', 'Chemical Breaks / Big Beat') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('digital-hardcore-breakcore', 'breakbeat', 'Digital Hardcore / Breakcore') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('future-bass-future-garage', 'breakbeat', 'Future Bass / Future Garage') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('glitch-hop-wonky', 'breakbeat', 'Glitch Hop & Wonky') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('urban-breaks-rap-rnb', 'breakbeat', 'Urban Breaks / Rap R&B') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('uk-garage-speed-2-step', 'breakbeat', 'UK Garage / Speed / 2-Step (Hybrid: Breakbeat + Drum ‘n’ Bass)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('uk-garage-speed-2-step-alt', 'breakbeat', 'UK Garage / Speed / 2-Step (Hybrid: Drum ‘n’ Bass + Breakbeat)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_types (id, family_id, name) values ('drum-n-bass', 'dance-edm', 'Drum ''n'' Bass / Jungle') on conflict (id) do update set name = excluded.name, family_id = excluded.family_id;
insert into public.genre_subtypes (id, type_id, name) values ('baseline-uk-funky-hybrid', 'drum-n-bass', 'Baseline / UK Funky (Hybrid: Breakbeat + Drum ‘n’ Bass)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('darkcore-darkstep', 'drum-n-bass', 'Darkcore / Darkstep (Hybrid: Drum ‘n’ Bass + Hardcore)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('digital-hardcore-dnb', 'drum-n-bass', 'Digital Hardcore / Breakcore (Hybrid: Drum ‘n’ Bass + Hardcore)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('drum-n-bass-core', 'drum-n-bass', 'Drum ''n'' Bass') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('future-bass-garage-dnb', 'drum-n-bass', 'Future Bass / Future Garage (Hybrid: Drum ‘n’ Bass + Breakbeat)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('grime-breakbeat-garage', 'drum-n-bass', 'Grime / Breakbeat Garage (Hybrid: Drum ‘n’ Bass + Breakbeat)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('intelligent-ambient-dnb', 'drum-n-bass', 'Intelligent / Ambient Drum ‘n’ Bass / Jazzstep') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('jump-up', 'drum-n-bass', 'Jump Up') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('liquid-funk', 'drum-n-bass', 'Liquid Funk') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('neurofunk', 'drum-n-bass', 'Neurofunk') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('old-skool-jungle', 'drum-n-bass', 'Old Skool Jungle / Old Skool Drum ‘n’ Bass') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_types (id, family_id, name) values ('hardcore', 'dance-edm', 'Hardcore') on conflict (id) do update set name = excluded.name, family_id = excluded.family_id;
insert into public.genre_subtypes (id, type_id, name) values ('baseline-uk-funky-hardcore', 'hardcore', 'Baseline / UK Funky (Hybrid: Drum ‘n’ Bass + Hardcore)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('breakbeat-hardcore-piano-house', 'hardcore', 'Breakbeat Hardcore / Piano House Rave') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('darkcore-hardcore-hybrid', 'hardcore', 'Darkcore / Darkstep (Hybrid: Hardcore + Drum ‘n’ Bass)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('early-gabber', 'hardcore', 'Early Gabber') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('happy-hardcore-bouncy-techno', 'hardcore', 'Happy Hardcore / Bouncy Techno') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('hardcore-techno-rave', 'hardcore', 'Hardcore Techno / Rave (Hybrid: Techno + Hardcore)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('hardstyle-jumpstyle', 'hardcore', 'Hardstyle / Jumpstyle') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('nu-style-gabber', 'hardcore', 'Nu Style Gabber / Mainstream / J-Core') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('speedcore-terrorcore-frenchcore', 'hardcore', 'Speedcore / Terrorcore / Frenchcore') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('uk-hardcore-freeform', 'hardcore', 'UK Hardcore / Freeform / Trancecore / Acidcore') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_types (id, family_id, name) values ('techno', 'dance-edm', 'Techno') on conflict (id) do update set name = excluded.name, family_id = excluded.family_id;
insert into public.genre_subtypes (id, type_id, name) values ('ambient-techno', 'techno', 'Ambient Techno / Intelligent Dance Music') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('detroit-techno', 'techno', 'Detroit Techno') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('free-tekno-hardtek', 'techno', 'Free Tekno / Hardtek') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('industrial-techno-early-schranz', 'techno', 'Industrial Techno / Early Schranz') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('minimal-techno', 'techno', 'Minimal Techno') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('tech-house-hybrid', 'techno', 'Tech House (Hybrid: House + Techno)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_types (id, family_id, name) values ('house', 'dance-edm', 'House') on conflict (id) do update set name = excluded.name, family_id = excluded.family_id;
insert into public.genre_subtypes (id, type_id, name) values ('acid-house', 'house', 'Acid House') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('deep-house', 'house', 'Deep House') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('dutch-electro-house', 'house', 'Dutch / Electro House') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('electro-house', 'house', 'Electro House') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('fidget-house-complextro', 'house', 'Fidget House / Complextro') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('french-funky-house', 'house', 'French / Funky House') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('ghetto-house-ghettotech-juke', 'house', 'Ghetto House / GhettoTech / Juke (Hybrid: Techno + House)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('ibiza-dream-house-trance', 'house', 'Ibiza / Dream House-Trance (Hybrid: Trance + House)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('microhouse-minimal-house', 'house', 'Microhouse / Minimal House') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('progressive-house', 'house', 'Progressive House') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('tech-house', 'house', 'Tech House (Hybrid: House + Techno)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_types (id, family_id, name) values ('trance', 'dance-edm', 'Trance') on conflict (id) do update set name = excluded.name, family_id = excluded.family_id;
insert into public.genre_subtypes (id, type_id, name) values ('acid-trance', 'trance', 'Classic / Acid Trance') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('goa-psytrance', 'trance', 'Goa Trance / Psytrance') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('ibiza-dream-trance', 'trance', 'Ibiza / Dream House-Trance (Hybrid: House + Trance)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('tech-trance', 'trance', 'Tech Trance') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('uplifting-epic-trance', 'trance', 'Uplifting / Epic Trance') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_families (id, name) values ('downtempo-ambient', 'Downtempo / Ambient') on conflict (id) do update set name = excluded.name;
insert into public.genre_types (id, family_id, name) values ('downtempo', 'downtempo-ambient', 'Downtempo / Ambient') on conflict (id) do update set name = excluded.name, family_id = excluded.family_id;
insert into public.genre_subtypes (id, type_id, name) values ('ambient', 'downtempo', 'Ambient') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('ambient-breaks-illbient', 'downtempo', 'Ambient Breaks / Illbient') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('ambient-house-chill-out', 'downtempo', 'Ambient House / Chill-Out') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('dark-ambient-industrial', 'downtempo', 'Dark Ambient / Dark Industrial (Hybrid: Ambient + Industrial / Gothic)') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('digital-minimalism-lowercase', 'downtempo', 'Digital Minimalism / Lowercase') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('downtempo-core', 'downtempo', 'Downtempo') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('lounge-exotica', 'downtempo', 'Lounge / Exotica / Space Age Pop') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('musique-concrete', 'downtempo', 'Musique Concrète') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('new-age', 'downtempo', 'New Age') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('synthwave-vaporwave', 'downtempo', 'Synthwave / Vaporwave') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_families (id, name) values ('classical', 'Classical') on conflict (id) do update set name = excluded.name;
insert into public.genre_types (id, family_id, name) values ('classical-periods', 'classical', 'Classical Periods') on conflict (id) do update set name = excluded.name, family_id = excluded.family_id;
insert into public.genre_subtypes (id, type_id, name) values ('baroque', 'classical-periods', 'Baroque') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('classical-era', 'classical-periods', 'Classical Era') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('romantic', 'classical-periods', 'Romantic') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('modern-classical', 'classical-periods', 'Modern Classical / Contemporary Classical') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_families (id, name) values ('folk-world', 'Folk & World') on conflict (id) do update set name = excluded.name;
insert into public.genre_types (id, family_id, name) values ('folk', 'folk-world', 'Folk / World') on conflict (id) do update set name = excluded.name, family_id = excluded.family_id;
insert into public.genre_subtypes (id, type_id, name) values ('traditional-folk', 'folk', 'Traditional Folk') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('world-fusion', 'folk', 'World Fusion / Ethnic Fusion') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('roots-folk', 'folk', 'Roots Folk') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
insert into public.genre_subtypes (id, type_id, name) values ('celtic-folk', 'folk', 'Celtic Folk') on conflict (id) do update set name = excluded.name, type_id = excluded.type_id;
commit;
